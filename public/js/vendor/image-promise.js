/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendor/image-promise"],{

/***/ "./node_modules/image-promise/index.js":
/*!*********************************************!*\
  !*** ./node_modules/image-promise/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction isArrayLike(input) {\n    return input.length !== undefined;\n}\nfunction loadSingleImage(image) {\n    var promise = new Promise(function (resolve, reject) {\n        if (image.naturalWidth) {\n            // If the browser can determine the naturalWidth the image is already loaded successfully\n            resolve(image);\n        }\n        else if (image.complete) {\n            // If the image is complete but the naturalWidth is 0px it is probably broken\n            reject(image);\n        }\n        else {\n            image.addEventListener('load', fulfill);\n            image.addEventListener('error', fulfill);\n        }\n        function fulfill() {\n            if (image.naturalWidth) {\n                resolve(image);\n            }\n            else {\n                reject(image);\n            }\n            image.removeEventListener('load', fulfill);\n            image.removeEventListener('error', fulfill);\n        }\n    });\n    return Object.assign(promise, { image: image });\n}\nfunction loadImages(input, attributes) {\n    if (attributes === void 0) { attributes = {}; }\n    if (input instanceof HTMLImageElement) {\n        return loadSingleImage(input);\n    }\n    if (typeof input === 'string') {\n        /* Create a <img> from a string */\n        var src = input;\n        var image_1 = new Image();\n        Object.keys(attributes).forEach(function (name) { return image_1.setAttribute(name, attributes[name]); });\n        image_1.src = src;\n        return loadSingleImage(image_1);\n    }\n    if (isArrayLike(input)) {\n        // Momentarily ignore errors\n        var reflect = function (img) { return loadImages(img, attributes).catch(function (error) { return error; }); };\n        var reflected = [].map.call(input, reflect);\n        var tsFix_1 = Promise.all(reflected).then(function (results) {\n            var loaded = results.filter(function (x) { return x.naturalWidth; });\n            if (loaded.length === results.length) {\n                return loaded;\n            }\n            return Promise.reject({\n                loaded: loaded,\n                errored: results.filter(function (x) { return !x.naturalWidth; })\n            });\n        });\n        // Variables named `tsFix` are only here because TypeScript hates Promise-returning functions.\n        return tsFix_1;\n    }\n    var tsFix = Promise.reject(new TypeError('input is not an image, a URL string, or an array of them.'));\n    return tsFix;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (loadImages);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvaW1hZ2UtcHJvbWlzZS9pbmRleC5qcz9hZGFlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsbUNBQW1DLGVBQWU7QUFDbEQ7QUFDQTtBQUNBLGdDQUFnQyxpQkFBaUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQscURBQXFELEVBQUU7QUFDaEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyw0REFBNEQsY0FBYyxFQUFFLEVBQUU7QUFDcEg7QUFDQTtBQUNBLHNEQUFzRCx1QkFBdUIsRUFBRTtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELHdCQUF3QixFQUFFO0FBQ2hGLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsVUFBVSxFQUFDIiwiZmlsZSI6Ii4vbm9kZV9tb2R1bGVzL2ltYWdlLXByb21pc2UvaW5kZXguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpc0FycmF5TGlrZShpbnB1dCkge1xuICAgIHJldHVybiBpbnB1dC5sZW5ndGggIT09IHVuZGVmaW5lZDtcbn1cbmZ1bmN0aW9uIGxvYWRTaW5nbGVJbWFnZShpbWFnZSkge1xuICAgIHZhciBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBpZiAoaW1hZ2UubmF0dXJhbFdpZHRoKSB7XG4gICAgICAgICAgICAvLyBJZiB0aGUgYnJvd3NlciBjYW4gZGV0ZXJtaW5lIHRoZSBuYXR1cmFsV2lkdGggdGhlIGltYWdlIGlzIGFscmVhZHkgbG9hZGVkIHN1Y2Nlc3NmdWxseVxuICAgICAgICAgICAgcmVzb2x2ZShpbWFnZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaW1hZ2UuY29tcGxldGUpIHtcbiAgICAgICAgICAgIC8vIElmIHRoZSBpbWFnZSBpcyBjb21wbGV0ZSBidXQgdGhlIG5hdHVyYWxXaWR0aCBpcyAwcHggaXQgaXMgcHJvYmFibHkgYnJva2VuXG4gICAgICAgICAgICByZWplY3QoaW1hZ2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bGZpbGwpO1xuICAgICAgICAgICAgaW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcignZXJyb3InLCBmdWxmaWxsKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsKCkge1xuICAgICAgICAgICAgaWYgKGltYWdlLm5hdHVyYWxXaWR0aCkge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoaW1hZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGltYWdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGltYWdlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdWxmaWxsKTtcbiAgICAgICAgICAgIGltYWdlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZnVsZmlsbCk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihwcm9taXNlLCB7IGltYWdlOiBpbWFnZSB9KTtcbn1cbmZ1bmN0aW9uIGxvYWRJbWFnZXMoaW5wdXQsIGF0dHJpYnV0ZXMpIHtcbiAgICBpZiAoYXR0cmlidXRlcyA9PT0gdm9pZCAwKSB7IGF0dHJpYnV0ZXMgPSB7fTsgfVxuICAgIGlmIChpbnB1dCBpbnN0YW5jZW9mIEhUTUxJbWFnZUVsZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuIGxvYWRTaW5nbGVJbWFnZShpbnB1dCk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIC8qIENyZWF0ZSBhIDxpbWc+IGZyb20gYSBzdHJpbmcgKi9cbiAgICAgICAgdmFyIHNyYyA9IGlucHV0O1xuICAgICAgICB2YXIgaW1hZ2VfMSA9IG5ldyBJbWFnZSgpO1xuICAgICAgICBPYmplY3Qua2V5cyhhdHRyaWJ1dGVzKS5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBpbWFnZV8xLnNldEF0dHJpYnV0ZShuYW1lLCBhdHRyaWJ1dGVzW25hbWVdKTsgfSk7XG4gICAgICAgIGltYWdlXzEuc3JjID0gc3JjO1xuICAgICAgICByZXR1cm4gbG9hZFNpbmdsZUltYWdlKGltYWdlXzEpO1xuICAgIH1cbiAgICBpZiAoaXNBcnJheUxpa2UoaW5wdXQpKSB7XG4gICAgICAgIC8vIE1vbWVudGFyaWx5IGlnbm9yZSBlcnJvcnNcbiAgICAgICAgdmFyIHJlZmxlY3QgPSBmdW5jdGlvbiAoaW1nKSB7IHJldHVybiBsb2FkSW1hZ2VzKGltZywgYXR0cmlidXRlcykuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7IHJldHVybiBlcnJvcjsgfSk7IH07XG4gICAgICAgIHZhciByZWZsZWN0ZWQgPSBbXS5tYXAuY2FsbChpbnB1dCwgcmVmbGVjdCk7XG4gICAgICAgIHZhciB0c0ZpeF8xID0gUHJvbWlzZS5hbGwocmVmbGVjdGVkKS50aGVuKGZ1bmN0aW9uIChyZXN1bHRzKSB7XG4gICAgICAgICAgICB2YXIgbG9hZGVkID0gcmVzdWx0cy5maWx0ZXIoZnVuY3Rpb24gKHgpIHsgcmV0dXJuIHgubmF0dXJhbFdpZHRoOyB9KTtcbiAgICAgICAgICAgIGlmIChsb2FkZWQubGVuZ3RoID09PSByZXN1bHRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBsb2FkZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3Qoe1xuICAgICAgICAgICAgICAgIGxvYWRlZDogbG9hZGVkLFxuICAgICAgICAgICAgICAgIGVycm9yZWQ6IHJlc3VsdHMuZmlsdGVyKGZ1bmN0aW9uICh4KSB7IHJldHVybiAheC5uYXR1cmFsV2lkdGg7IH0pXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIFZhcmlhYmxlcyBuYW1lZCBgdHNGaXhgIGFyZSBvbmx5IGhlcmUgYmVjYXVzZSBUeXBlU2NyaXB0IGhhdGVzIFByb21pc2UtcmV0dXJuaW5nIGZ1bmN0aW9ucy5cbiAgICAgICAgcmV0dXJuIHRzRml4XzE7XG4gICAgfVxuICAgIHZhciB0c0ZpeCA9IFByb21pc2UucmVqZWN0KG5ldyBUeXBlRXJyb3IoJ2lucHV0IGlzIG5vdCBhbiBpbWFnZSwgYSBVUkwgc3RyaW5nLCBvciBhbiBhcnJheSBvZiB0aGVtLicpKTtcbiAgICByZXR1cm4gdHNGaXg7XG59XG5leHBvcnQgZGVmYXVsdCBsb2FkSW1hZ2VzO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/image-promise/index.js\n");

/***/ })

}]);